Date.UTC()
==========

    Date.UTC(year, month[, day[, hour[, minute[, second[, millisecond]]]]]) => string

    This is a Static Method

    [Parameter]:
        year, month[, day[, hour[, minute[, second[, millisecond]]]]]

    [Return]:
        <string> number of milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.

        [!] Does not return a Date object. If you want a Date Object use:
            var utcDate = new Date(Date.UTC(2014, 11, 1, 0, 0, 0));

Date.parse()
============

    Date.parse(dateString)

    This is a Static Method

    [Parameters]
        dateString: A string representing an RFC2822 or ISO 8601 date
                    (other formats may be used, but results may be unexpected).

    [Return]
        Returns the number of milliseconds since January 1, 1970
        00:00:00 UTC or NaN if the string is unrecognised or
        contains illegal date values (e.g. 2015-02-31).

    [!] Given a date string of
            "March 7, 2014",
        parse() assumes a local time zone, but given an ISO format
        such as
            "2014 03-07"
        it will assume a time zone of UTC for ES5 or local
        for ECMAScript 2015.

Date Constructor
================

    [Signature]

        new Date();
        new Date(value);
        new Date(dateString);
        new Date(year, month[, day[, hour[, minutes[, seconds[, milliseconds]]]]]);

        Details:
        --------

        new Date();

            Creates a JavaScript Date object for the current
            date and time according to system settings.

        new Date(value);

            Where the parameter of integer value representing
            the number of milliseconds since 1 January 1970 00 00:00 UTC (Unix Epoch).

        new Date(dateString);

            Where dateString is string value representing a date.
            The string should be in a format recognized by the
            Date.parse() method (IETF-compliant RFC 2822 timestamps
            and also a version of ISO8601).

        new Date(year, month[, day[, hour[, minutes[, seconds[, milliseconds]]]]]);

            Missing optional arguments are either set to
            1 (if day is missing) or 0 for all others.

How to read JS time
===================
Thu Oct 01 2015 20:00:00 GMT-0400 (EDT)
= 20:00:00UTC translate to time zone -4 (Eastern Day light)
to get local time at zone -4, add 4 to hour 20, you get 24 which is 00:00:00




